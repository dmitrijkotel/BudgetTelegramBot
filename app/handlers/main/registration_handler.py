from aiogram import Router, F
from aiogram.enums import ParseMode
from aiogram.filters import CommandStart
from aiogram.types import Message, CallbackQuery
import app.handlers.budget.keyboards.budget_menu_keyboard as kb
from app.handlers.main.database.registration_db import registration
import app.handlers.main.keyboards.registration_keyboard as reg_kb


registration_router = Router()

async def start_message(message):
    await message.answer("""
    üåü <b>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –ë—é–¥–∂–µ—Ç–Ω—ã–π –ü–æ–º–æ—â–Ω–∏–∫!</b> üåü

    –ú—ã —Ä–∞–¥—ã –≤–∏–¥–µ—Ç—å –≤–∞—Å –∑–¥–µ—Å—å! –≠—Ç–æ—Ç –±–æ—Ç —Å–æ–∑–¥–∞–Ω —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ –¥–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –ø–æ–º–æ—á—å –≤–∞–º —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ —É–ø—Ä–∞–≤–ª—è—Ç—å –≤–∞—à–∏–º –±—é–¥–∂–µ—Ç–æ–º –∏ –∫–æ–Ω—Ç—Ä–æ–ª–∏—Ä–æ–≤–∞—Ç—å —Å–≤–æ–∏ —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–µ –ø–æ—Ç–æ–∫–∏.

    üí∞ <b>–ß—Ç–æ –≤—ã –º–æ–∂–µ—Ç–µ –¥–µ–ª–∞—Ç—å —Å –Ω–∞—à–∏–º –±–æ—Ç–æ–º?</b>

    1. –ó–∞–ø–∏—Å—ã–≤–∞—Ç—å —Ä–∞—Å—Ö–æ–¥—ã: –õ–µ–≥–∫–æ —Ñ–∏–∫—Å–∏—Ä—É–π—Ç–µ –≤—Å–µ —Å–≤–æ–∏ —Ç—Ä–∞—Ç—ã, —á—Ç–æ–±—ã –≤—Å–µ–≥–¥–∞ –±—ã—Ç—å –≤ –∫—É—Ä—Å–µ, –∫—É–¥–∞ —É—Ö–æ–¥—è—Ç –≤–∞—à–∏ –¥–µ–Ω—å–≥–∏. –ü—Ä–æ—Å—Ç–æ —É–∫–∞–∂–∏—Ç–µ —Å—É–º–º—É –∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—é —Ä–∞—Å—Ö–æ–¥–∞, –∏ –±–æ—Ç —Å–æ—Ö—Ä–∞–Ω–∏—Ç —ç—Ç—É –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –¥–ª—è –≤–∞—Å.

    2. –£—á–∏—Ç—ã–≤–∞—Ç—å –¥–æ—Ö–æ–¥—ã: –ù–µ –∑–∞–±—ã–≤–∞–π—Ç–µ –æ —Å–≤–æ–∏—Ö –¥–æ—Ö–æ–¥–∞—Ö! –ó–∞–ø–∏—Å—ã–≤–∞–π—Ç–µ –≤—Å–µ –ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏—è, —á—Ç–æ–±—ã –∏–º–µ—Ç—å –ø–æ–ª–Ω–æ–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –æ —Å–≤–æ–∏—Ö —Ñ–∏–Ω–∞–Ω—Å–∞—Ö.

    3. –§–æ—Ä–º–∏—Ä–æ–≤–∞—Ç—å –æ—Ç—á–µ—Ç—ã: –ü–æ–ª—É—á–∞–π—Ç–µ –Ω–∞–≥–ª—è–¥–Ω—ã–µ –æ—Ç—á–µ—Ç—ã –æ –≤–∞—à–∏—Ö —Ä–∞—Å—Ö–æ–¥–∞—Ö –∏ –¥–æ—Ö–æ–¥–∞—Ö. –≠—Ç–æ –ø–æ–º–æ–∂–µ—Ç –≤–∞–º –∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å —Å–≤–æ–∏ —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–µ –ø—Ä–∏–≤—ã—á–∫–∏ –∏ –ø—Ä–∏–Ω–∏–º–∞—Ç—å –±–æ–ª–µ–µ –æ–±–æ—Å–Ω–æ–≤–∞–Ω–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è.

    4. –£–ø—Ä–∞–≤–ª—è—Ç—å –±—é–¥–∂–µ—Ç–æ–º: –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–π—Ç–µ –±—é–¥–∂–µ—Ç–Ω—ã–µ –ª–∏–º–∏—Ç—ã –¥–ª—è —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π —Ä–∞—Å—Ö–æ–¥–æ–≤ –∏ —Å–ª–µ–¥–∏—Ç–µ –∑–∞ –∏—Ö –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ–º. –ë–æ—Ç –Ω–∞–ø–æ–º–Ω–∏—Ç –≤–∞–º, –µ—Å–ª–∏ –≤—ã –ø—Ä–∏–±–ª–∏–∑–∏—Ç–µ—Å—å –∫ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–º –≥—Ä–∞–Ω–∏—Ü–∞–º.

    ‚ú® <b>–ö–∞–∫ –Ω–∞—á–∞—Ç—å?</b>

    –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É <b>–∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è</b>, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥ –∏ —É–∑–Ω–∞—Ç—å –±–æ–ª—å—à–µ –æ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–µ –±–æ—Ç–∞. –ú—ã —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ–º –Ω–∞—á–∞—Ç—å —Å —Å–æ–∑–¥–∞–Ω–∏—è –≤–∞—à–µ–≥–æ –ø–µ—Ä–≤–æ–≥–æ –±—é–¥–∂–µ—Ç–∞, —á—Ç–æ–±—ã —Å—Ä–∞–∑—É —É–≤–∏–¥–µ—Ç—å, –∫–∞–∫ –ª–µ–≥–∫–æ –∏ —É–¥–æ–±–Ω–æ —ç—Ç–æ –¥–µ–ª–∞—Ç—å!

    üìä <i>–î–∞–≤–∞–π—Ç–µ —Å–¥–µ–ª–∞–µ–º –≤–∞—à–∏ —Ñ–∏–Ω–∞–Ω—Å—ã –±–æ–ª–µ–µ –ø—Ä–æ–∑—Ä–∞—á–Ω—ã–º–∏ –∏ —É–ø—Ä–∞–≤–ª—è–µ–º—ã–º–∏ –≤–º–µ—Å—Ç–µ!</i>""", parse_mode=ParseMode.HTML)

    await message.answer('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–æ–π–¥–∏—Ç–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é, —á—Ç–æ–±—ã –æ—Ç–∫—Ä—ã—Ç—å –≤—Å–µ –µ–≥–æ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏!', reply_markup=reg_kb.registration_keyboard)

@registration_router.callback_query(F.data == 'reg')
async def create_budget(callback: CallbackQuery):
    await callback.answer()
    await callback.message.delete()
    await callback.message.answer('–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –±—é–¥–∂–µ—Ç–æ–º', reply_markup=kb.budget_menu_keyboard)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
@registration_router.message(CommandStart())
async def cmd_start(message: Message):

        telegram_id = message.from_user.id
        result = registration(telegram_id)
        if result == 0:
            await start_message(message)
        else:
            await message.answer('–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –±—é–¥–∂–µ—Ç–æ–º', reply_markup=kb.budget_menu_keyboard)
